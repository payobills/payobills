name: 'ci workflow'

env:
  MAIN_BRANCH: main
  DOTNET_VERSION: 6.0.x

on:
  pull_request:
    branches:
    - main
    - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to head branch for PR
        uses: actions/checkout@v2

      - name: Setup please.build
        uses: sagikazarmark/setup-please-action@v0

      - name: Calculate changed services
        id: calculate_changed_services
        run: . ./.cicd/common/semver-yeasy.sh changed

      - name: Check targets
        id: check_targets
        run: |
          BUILD_TARGETS=$(for i in `ls -1 apps`; do echo -n "(//apps/$i)|"; done | sed 's/|$//')
          PLZ_CHANGES=`plz query changes -s origin/${{ steps.calculate_changed_services.outputs.diff_dest }}`
          CHANGED_TARGETS=`echo $PLZ_CHANGES | (egrep -o $BUILD_TARGETS || true)`
          SERVICES=`echo $CHANGED_TARGETS | egrep -o $BUILD_TARGETS | sort | uniq`
          SERVICES_SINGLE_LINE=`echo $SERVICES | tr '\n' ' '`
          echo "Please changes: $PLZ_CHANGES"
          echo "Services to build: '$SERVICES'"
          echo "::set-output name=SERVICES::$SERVICES"
          echo "::set-output name=SERVICES_SINGLE_LINE::$SERVICES_SINGLE_LINE"

      # - name: lint targets
      #   if: steps.check_targets.outputs.SERVICES != ''
      #   run: |
      #     # TODO: figure out how to pass different env for different targets
      #     for i in ${{ steps.check_targets.outputs.SERVICES }}; do
      #       PLZ_OVERRIDES=buildenv.SECRET_SERVICE_NAME:"$i" plz run $i:lint
      #     done

      # - name: run tests
      #   if: steps.check_targets.outputs.SERVICES_SINGLE_LINE != ''
      #   run: plz test `echo ${{ steps.check_targets.outputs.SERVICES_SINGLE_LINE }} | sed 's|//apps/[a-z]*|&/tests|g'`

      - name: Build targets
        if: steps.check_targets.outputs.SERVICES != ''
        run: |
          plz run parallel ${{ steps.check_targets.outputs.SERVICES_SINGLE_LINE }}