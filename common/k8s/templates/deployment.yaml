{{- if not (eq .Values.type "expose-external-service") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.pod.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- range $value := .Values.pod.volumes }}
          - name: {{ $value.name }}
            hostPath:
              path: {{ printf "%s/%s" $.Values.helpers.PROJECT_ROOT $value.hostPath.pathPrefix }}
        {{- end }}
        {{- if .Values.enableOpenTelemetry }}
          - name: varlog
            emptyDir: {}
          - name: opentelemetry-collector-configmap
            configMap:
              defaultMode: 420
              items:
              - key: relay
                path: relay.yaml
              name: opentelemetry-collector
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.pod.command }}
          command:
            {{- range .Values.pod.command }}
              - {{ . }}
            {{- end }}
          {{- end }}
          {{- if eq .Values.environment "LOCAL_DEVELOPMENT" }}
          workingDir: "/app"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- toYaml .Values.pod.env | nindent 12 }}
          volumeMounts:
            {{- toYaml .Values.pod.volumeMounts | nindent 12 }}
            {{- if .Values.enableOpenTelemetry }}
            - name: varlog
              mountPath: /var/log
            {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if ne .Values.environment "LOCAL_DEVELOPMENT" }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.enableOpenTelemetry }}
        - name: opentelemetry-collector
          image: otel/opentelemetry-collector-contrib:0.98.0
          command:
          - /otelcol-contrib
          - --config=/conf/relay.yaml
          volumeMounts:
          - mountPath: /conf
            name: opentelemetry-collector-configmap
          - name: varlog
            mountPath: /var/log
          env:
            - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME # set pod name as resource attribute for k8s metadata processor
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
